/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AppImport } from './routes/_app'
import { Route as AppWarehouseImport } from './routes/_app/_warehouse'
import { Route as AppWarehouseProductsRemainsImport } from './routes/_app/_warehouse/productsRemains'
import { Route as AppWarehouseProductsImport } from './routes/_app/_warehouse/products'
import { Route as AppWarehousePartiesImport } from './routes/_app/_warehouse/parties'
import { Route as AppWarehouseOrdersImport } from './routes/_app/_warehouse/orders'
import { Route as AppWarehouseBuyersImport } from './routes/_app/_warehouse/buyers'
import { Route as AppWarehouseProductsProductsIdEditImport } from './routes/_app/_warehouse/products_/$productsId/edit'
import { Route as AppWarehousePartiesPartyIdEditImport } from './routes/_app/_warehouse/parties_/$partyId/edit'
import { Route as AppWarehouseOrdersOrderIdEditImport } from './routes/_app/_warehouse/orders_/$orderId/edit'
import { Route as AppWarehouseProductsProductsIdEditInfoImport } from './routes/_app/_warehouse/products_/$productsId/edit/info'
import { Route as AppWarehouseProductsProductsIdEditHistoryImport } from './routes/_app/_warehouse/products_/$productsId/edit/history'
import { Route as AppWarehouseProductsProductsIdEditFilesImport } from './routes/_app/_warehouse/products_/$productsId/edit/files'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const AppWarehouseRoute = AppWarehouseImport.update({
  id: '/_warehouse',
  getParentRoute: () => AppRoute,
} as any)

const AppWarehouseProductsRemainsRoute =
  AppWarehouseProductsRemainsImport.update({
    id: '/productsRemains',
    path: '/productsRemains',
    getParentRoute: () => AppWarehouseRoute,
  } as any).lazy(() =>
    import('./routes/_app/_warehouse/productsRemains.lazy').then(
      (d) => d.Route,
    ),
  )

const AppWarehouseProductsRoute = AppWarehouseProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => AppWarehouseRoute,
} as any).lazy(() =>
  import('./routes/_app/_warehouse/products.lazy').then((d) => d.Route),
)

const AppWarehousePartiesRoute = AppWarehousePartiesImport.update({
  id: '/parties',
  path: '/parties',
  getParentRoute: () => AppWarehouseRoute,
} as any).lazy(() =>
  import('./routes/_app/_warehouse/parties.lazy').then((d) => d.Route),
)

const AppWarehouseOrdersRoute = AppWarehouseOrdersImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => AppWarehouseRoute,
} as any)

const AppWarehouseBuyersRoute = AppWarehouseBuyersImport.update({
  id: '/buyers',
  path: '/buyers',
  getParentRoute: () => AppWarehouseRoute,
} as any).lazy(() =>
  import('./routes/_app/_warehouse/buyers.lazy').then((d) => d.Route),
)

const AppWarehouseProductsProductsIdEditRoute =
  AppWarehouseProductsProductsIdEditImport.update({
    id: '/products_/$productsId/edit',
    path: '/products/$productsId/edit',
    getParentRoute: () => AppWarehouseRoute,
  } as any)

const AppWarehousePartiesPartyIdEditRoute =
  AppWarehousePartiesPartyIdEditImport.update({
    id: '/parties_/$partyId/edit',
    path: '/parties/$partyId/edit',
    getParentRoute: () => AppWarehouseRoute,
  } as any)

const AppWarehouseOrdersOrderIdEditRoute =
  AppWarehouseOrdersOrderIdEditImport.update({
    id: '/orders_/$orderId/edit',
    path: '/orders/$orderId/edit',
    getParentRoute: () => AppWarehouseRoute,
  } as any)

const AppWarehouseProductsProductsIdEditInfoRoute =
  AppWarehouseProductsProductsIdEditInfoImport.update({
    id: '/info',
    path: '/info',
    getParentRoute: () => AppWarehouseProductsProductsIdEditRoute,
  } as any)

const AppWarehouseProductsProductsIdEditHistoryRoute =
  AppWarehouseProductsProductsIdEditHistoryImport.update({
    id: '/history',
    path: '/history',
    getParentRoute: () => AppWarehouseProductsProductsIdEditRoute,
  } as any)

const AppWarehouseProductsProductsIdEditFilesRoute =
  AppWarehouseProductsProductsIdEditFilesImport.update({
    id: '/files',
    path: '/files',
    getParentRoute: () => AppWarehouseProductsProductsIdEditRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_app/_warehouse': {
      id: '/_app/_warehouse'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppWarehouseImport
      parentRoute: typeof AppImport
    }
    '/_app/_warehouse/buyers': {
      id: '/_app/_warehouse/buyers'
      path: '/buyers'
      fullPath: '/buyers'
      preLoaderRoute: typeof AppWarehouseBuyersImport
      parentRoute: typeof AppWarehouseImport
    }
    '/_app/_warehouse/orders': {
      id: '/_app/_warehouse/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof AppWarehouseOrdersImport
      parentRoute: typeof AppWarehouseImport
    }
    '/_app/_warehouse/parties': {
      id: '/_app/_warehouse/parties'
      path: '/parties'
      fullPath: '/parties'
      preLoaderRoute: typeof AppWarehousePartiesImport
      parentRoute: typeof AppWarehouseImport
    }
    '/_app/_warehouse/products': {
      id: '/_app/_warehouse/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof AppWarehouseProductsImport
      parentRoute: typeof AppWarehouseImport
    }
    '/_app/_warehouse/productsRemains': {
      id: '/_app/_warehouse/productsRemains'
      path: '/productsRemains'
      fullPath: '/productsRemains'
      preLoaderRoute: typeof AppWarehouseProductsRemainsImport
      parentRoute: typeof AppWarehouseImport
    }
    '/_app/_warehouse/orders_/$orderId/edit': {
      id: '/_app/_warehouse/orders_/$orderId/edit'
      path: '/orders/$orderId/edit'
      fullPath: '/orders/$orderId/edit'
      preLoaderRoute: typeof AppWarehouseOrdersOrderIdEditImport
      parentRoute: typeof AppWarehouseImport
    }
    '/_app/_warehouse/parties_/$partyId/edit': {
      id: '/_app/_warehouse/parties_/$partyId/edit'
      path: '/parties/$partyId/edit'
      fullPath: '/parties/$partyId/edit'
      preLoaderRoute: typeof AppWarehousePartiesPartyIdEditImport
      parentRoute: typeof AppWarehouseImport
    }
    '/_app/_warehouse/products_/$productsId/edit': {
      id: '/_app/_warehouse/products_/$productsId/edit'
      path: '/products/$productsId/edit'
      fullPath: '/products/$productsId/edit'
      preLoaderRoute: typeof AppWarehouseProductsProductsIdEditImport
      parentRoute: typeof AppWarehouseImport
    }
    '/_app/_warehouse/products_/$productsId/edit/files': {
      id: '/_app/_warehouse/products_/$productsId/edit/files'
      path: '/files'
      fullPath: '/products/$productsId/edit/files'
      preLoaderRoute: typeof AppWarehouseProductsProductsIdEditFilesImport
      parentRoute: typeof AppWarehouseProductsProductsIdEditImport
    }
    '/_app/_warehouse/products_/$productsId/edit/history': {
      id: '/_app/_warehouse/products_/$productsId/edit/history'
      path: '/history'
      fullPath: '/products/$productsId/edit/history'
      preLoaderRoute: typeof AppWarehouseProductsProductsIdEditHistoryImport
      parentRoute: typeof AppWarehouseProductsProductsIdEditImport
    }
    '/_app/_warehouse/products_/$productsId/edit/info': {
      id: '/_app/_warehouse/products_/$productsId/edit/info'
      path: '/info'
      fullPath: '/products/$productsId/edit/info'
      preLoaderRoute: typeof AppWarehouseProductsProductsIdEditInfoImport
      parentRoute: typeof AppWarehouseProductsProductsIdEditImport
    }
  }
}

// Create and export the route tree

interface AppWarehouseProductsProductsIdEditRouteChildren {
  AppWarehouseProductsProductsIdEditFilesRoute: typeof AppWarehouseProductsProductsIdEditFilesRoute
  AppWarehouseProductsProductsIdEditHistoryRoute: typeof AppWarehouseProductsProductsIdEditHistoryRoute
  AppWarehouseProductsProductsIdEditInfoRoute: typeof AppWarehouseProductsProductsIdEditInfoRoute
}

const AppWarehouseProductsProductsIdEditRouteChildren: AppWarehouseProductsProductsIdEditRouteChildren =
  {
    AppWarehouseProductsProductsIdEditFilesRoute:
      AppWarehouseProductsProductsIdEditFilesRoute,
    AppWarehouseProductsProductsIdEditHistoryRoute:
      AppWarehouseProductsProductsIdEditHistoryRoute,
    AppWarehouseProductsProductsIdEditInfoRoute:
      AppWarehouseProductsProductsIdEditInfoRoute,
  }

const AppWarehouseProductsProductsIdEditRouteWithChildren =
  AppWarehouseProductsProductsIdEditRoute._addFileChildren(
    AppWarehouseProductsProductsIdEditRouteChildren,
  )

interface AppWarehouseRouteChildren {
  AppWarehouseBuyersRoute: typeof AppWarehouseBuyersRoute
  AppWarehouseOrdersRoute: typeof AppWarehouseOrdersRoute
  AppWarehousePartiesRoute: typeof AppWarehousePartiesRoute
  AppWarehouseProductsRoute: typeof AppWarehouseProductsRoute
  AppWarehouseProductsRemainsRoute: typeof AppWarehouseProductsRemainsRoute
  AppWarehouseOrdersOrderIdEditRoute: typeof AppWarehouseOrdersOrderIdEditRoute
  AppWarehousePartiesPartyIdEditRoute: typeof AppWarehousePartiesPartyIdEditRoute
  AppWarehouseProductsProductsIdEditRoute: typeof AppWarehouseProductsProductsIdEditRouteWithChildren
}

const AppWarehouseRouteChildren: AppWarehouseRouteChildren = {
  AppWarehouseBuyersRoute: AppWarehouseBuyersRoute,
  AppWarehouseOrdersRoute: AppWarehouseOrdersRoute,
  AppWarehousePartiesRoute: AppWarehousePartiesRoute,
  AppWarehouseProductsRoute: AppWarehouseProductsRoute,
  AppWarehouseProductsRemainsRoute: AppWarehouseProductsRemainsRoute,
  AppWarehouseOrdersOrderIdEditRoute: AppWarehouseOrdersOrderIdEditRoute,
  AppWarehousePartiesPartyIdEditRoute: AppWarehousePartiesPartyIdEditRoute,
  AppWarehouseProductsProductsIdEditRoute:
    AppWarehouseProductsProductsIdEditRouteWithChildren,
}

const AppWarehouseRouteWithChildren = AppWarehouseRoute._addFileChildren(
  AppWarehouseRouteChildren,
)

interface AppRouteChildren {
  AppWarehouseRoute: typeof AppWarehouseRouteWithChildren
}

const AppRouteChildren: AppRouteChildren = {
  AppWarehouseRoute: AppWarehouseRouteWithChildren,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof AppWarehouseRouteWithChildren
  '/login': typeof LoginRoute
  '/buyers': typeof AppWarehouseBuyersRoute
  '/orders': typeof AppWarehouseOrdersRoute
  '/parties': typeof AppWarehousePartiesRoute
  '/products': typeof AppWarehouseProductsRoute
  '/productsRemains': typeof AppWarehouseProductsRemainsRoute
  '/orders/$orderId/edit': typeof AppWarehouseOrdersOrderIdEditRoute
  '/parties/$partyId/edit': typeof AppWarehousePartiesPartyIdEditRoute
  '/products/$productsId/edit': typeof AppWarehouseProductsProductsIdEditRouteWithChildren
  '/products/$productsId/edit/files': typeof AppWarehouseProductsProductsIdEditFilesRoute
  '/products/$productsId/edit/history': typeof AppWarehouseProductsProductsIdEditHistoryRoute
  '/products/$productsId/edit/info': typeof AppWarehouseProductsProductsIdEditInfoRoute
}

export interface FileRoutesByTo {
  '': typeof AppWarehouseRouteWithChildren
  '/login': typeof LoginRoute
  '/buyers': typeof AppWarehouseBuyersRoute
  '/orders': typeof AppWarehouseOrdersRoute
  '/parties': typeof AppWarehousePartiesRoute
  '/products': typeof AppWarehouseProductsRoute
  '/productsRemains': typeof AppWarehouseProductsRemainsRoute
  '/orders/$orderId/edit': typeof AppWarehouseOrdersOrderIdEditRoute
  '/parties/$partyId/edit': typeof AppWarehousePartiesPartyIdEditRoute
  '/products/$productsId/edit': typeof AppWarehouseProductsProductsIdEditRouteWithChildren
  '/products/$productsId/edit/files': typeof AppWarehouseProductsProductsIdEditFilesRoute
  '/products/$productsId/edit/history': typeof AppWarehouseProductsProductsIdEditHistoryRoute
  '/products/$productsId/edit/info': typeof AppWarehouseProductsProductsIdEditInfoRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_app': typeof AppRouteWithChildren
  '/login': typeof LoginRoute
  '/_app/_warehouse': typeof AppWarehouseRouteWithChildren
  '/_app/_warehouse/buyers': typeof AppWarehouseBuyersRoute
  '/_app/_warehouse/orders': typeof AppWarehouseOrdersRoute
  '/_app/_warehouse/parties': typeof AppWarehousePartiesRoute
  '/_app/_warehouse/products': typeof AppWarehouseProductsRoute
  '/_app/_warehouse/productsRemains': typeof AppWarehouseProductsRemainsRoute
  '/_app/_warehouse/orders_/$orderId/edit': typeof AppWarehouseOrdersOrderIdEditRoute
  '/_app/_warehouse/parties_/$partyId/edit': typeof AppWarehousePartiesPartyIdEditRoute
  '/_app/_warehouse/products_/$productsId/edit': typeof AppWarehouseProductsProductsIdEditRouteWithChildren
  '/_app/_warehouse/products_/$productsId/edit/files': typeof AppWarehouseProductsProductsIdEditFilesRoute
  '/_app/_warehouse/products_/$productsId/edit/history': typeof AppWarehouseProductsProductsIdEditHistoryRoute
  '/_app/_warehouse/products_/$productsId/edit/info': typeof AppWarehouseProductsProductsIdEditInfoRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/buyers'
    | '/orders'
    | '/parties'
    | '/products'
    | '/productsRemains'
    | '/orders/$orderId/edit'
    | '/parties/$partyId/edit'
    | '/products/$productsId/edit'
    | '/products/$productsId/edit/files'
    | '/products/$productsId/edit/history'
    | '/products/$productsId/edit/info'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/buyers'
    | '/orders'
    | '/parties'
    | '/products'
    | '/productsRemains'
    | '/orders/$orderId/edit'
    | '/parties/$partyId/edit'
    | '/products/$productsId/edit'
    | '/products/$productsId/edit/files'
    | '/products/$productsId/edit/history'
    | '/products/$productsId/edit/info'
  id:
    | '__root__'
    | '/_app'
    | '/login'
    | '/_app/_warehouse'
    | '/_app/_warehouse/buyers'
    | '/_app/_warehouse/orders'
    | '/_app/_warehouse/parties'
    | '/_app/_warehouse/products'
    | '/_app/_warehouse/productsRemains'
    | '/_app/_warehouse/orders_/$orderId/edit'
    | '/_app/_warehouse/parties_/$partyId/edit'
    | '/_app/_warehouse/products_/$productsId/edit'
    | '/_app/_warehouse/products_/$productsId/edit/files'
    | '/_app/_warehouse/products_/$productsId/edit/history'
    | '/_app/_warehouse/products_/$productsId/edit/info'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AppRoute: typeof AppRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  AppRoute: AppRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_app",
        "/login"
      ]
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/_warehouse"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_app/_warehouse": {
      "filePath": "_app/_warehouse.tsx",
      "parent": "/_app",
      "children": [
        "/_app/_warehouse/buyers",
        "/_app/_warehouse/orders",
        "/_app/_warehouse/parties",
        "/_app/_warehouse/products",
        "/_app/_warehouse/productsRemains",
        "/_app/_warehouse/orders_/$orderId/edit",
        "/_app/_warehouse/parties_/$partyId/edit",
        "/_app/_warehouse/products_/$productsId/edit"
      ]
    },
    "/_app/_warehouse/buyers": {
      "filePath": "_app/_warehouse/buyers.tsx",
      "parent": "/_app/_warehouse"
    },
    "/_app/_warehouse/orders": {
      "filePath": "_app/_warehouse/orders.tsx",
      "parent": "/_app/_warehouse"
    },
    "/_app/_warehouse/parties": {
      "filePath": "_app/_warehouse/parties.tsx",
      "parent": "/_app/_warehouse"
    },
    "/_app/_warehouse/products": {
      "filePath": "_app/_warehouse/products.tsx",
      "parent": "/_app/_warehouse"
    },
    "/_app/_warehouse/productsRemains": {
      "filePath": "_app/_warehouse/productsRemains.tsx",
      "parent": "/_app/_warehouse"
    },
    "/_app/_warehouse/orders_/$orderId/edit": {
      "filePath": "_app/_warehouse/orders_/$orderId/edit.tsx",
      "parent": "/_app/_warehouse"
    },
    "/_app/_warehouse/parties_/$partyId/edit": {
      "filePath": "_app/_warehouse/parties_/$partyId/edit.tsx",
      "parent": "/_app/_warehouse"
    },
    "/_app/_warehouse/products_/$productsId/edit": {
      "filePath": "_app/_warehouse/products_/$productsId/edit.tsx",
      "parent": "/_app/_warehouse",
      "children": [
        "/_app/_warehouse/products_/$productsId/edit/files",
        "/_app/_warehouse/products_/$productsId/edit/history",
        "/_app/_warehouse/products_/$productsId/edit/info"
      ]
    },
    "/_app/_warehouse/products_/$productsId/edit/files": {
      "filePath": "_app/_warehouse/products_/$productsId/edit/files.tsx",
      "parent": "/_app/_warehouse/products_/$productsId/edit"
    },
    "/_app/_warehouse/products_/$productsId/edit/history": {
      "filePath": "_app/_warehouse/products_/$productsId/edit/history.tsx",
      "parent": "/_app/_warehouse/products_/$productsId/edit"
    },
    "/_app/_warehouse/products_/$productsId/edit/info": {
      "filePath": "_app/_warehouse/products_/$productsId/edit/info.tsx",
      "parent": "/_app/_warehouse/products_/$productsId/edit"
    }
  }
}
ROUTE_MANIFEST_END */
